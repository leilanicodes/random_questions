{"version":3,"sources":["logo.svg","Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","questions","roll","chooseQuestions","bind","assertThisInitialized","handleClick","inherits","createClass","key","value","temp","questionArr","length","Math","floor","random","console","log","includes","push","setState","react_default","a","createElement","onClick","Component","App","className","Home_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gMCE3BC,EAAb,SAAAC,GAEC,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACfG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAEDQ,MAAQ,CACVC,UAAY,CAAE,4JAEtB,4QAEA,+MAEA,wMAEA,uLAEA,8LAEA,oJAEA,6JAEA,iMAEA,4RAGGC,KAAQ,IAGPT,EAAKU,gBAAkBV,EAAKU,gBAAgBC,KAArBV,OAAAW,EAAA,EAAAX,CAAAD,IACvBA,EAAKa,YAAcb,EAAKa,YAAYF,KAAjBV,OAAAW,EAAA,EAAAX,CAAAD,IA7BHA,EAFpB,OAAAC,OAAAa,EAAA,EAAAb,CAAAJ,EAAAC,GAAAG,OAAAc,EAAA,EAAAd,CAAAJ,EAAA,EAAAmB,IAAA,cAAAC,MAAA,WAmCEd,KAAKO,oBAnCP,CAAAM,IAAA,kBAAAC,MAAA,WA4CE,IAJA,IACIC,EADAC,EAAY,GAITA,EAAYC,OAAO,GACzBF,EAAKG,KAAKC,MAAqB,GAAdD,KAAKE,UACtBC,QAAQC,IAAI,cAAgBP,GACvBC,EAAYO,SAASR,IACzBC,EAAYQ,KAAKT,GAInBM,QAAQC,IAAI,qBAAqBN,GAEjChB,KAAKyB,SAAS,CACbnB,KAAMU,MAvDT,CAAAH,IAAA,oBAAAC,MAAA,WA4DEd,KAAKO,oBA5DP,CAAAM,IAAA,SAAAC,MAAA,WAgEE,OACCY,EAAAC,EAAAC,cAAA,WAECF,EAAAC,EAAAC,cAAA,UAAQC,QAAS7B,KAAKU,aAAtB,QAEAgB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,SAAI5B,KAAKI,MAAMC,UAAUL,KAAKI,MAAME,KAAK,KACzCoB,EAAAC,EAAAC,cAAA,SAAI5B,KAAKI,MAAMC,UAAUL,KAAKI,MAAME,KAAK,KACzCoB,EAAAC,EAAAC,cAAA,SAAI5B,KAAKI,MAAMC,UAAUL,KAAKI,MAAME,KAAK,KACzCoB,EAAAC,EAAAC,cAAA,SAAI5B,KAAKI,MAAMC,UAAUL,KAAKI,MAAME,KAAK,KACzCoB,EAAAC,EAAAC,cAAA,SAAI5B,KAAKI,MAAMC,UAAUL,KAAKI,MAAME,KAAK,WA1E9CZ,EAAA,CAA0BoC,aCWXC,MARf,WACE,OACEL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAACK,EAAD,QCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOd,EAAAC,EAAAC,cAACa,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.10f22e08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\n\r\nexport class Home extends Component {\r\n\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\r\n\t    this.state = {\r\n\t      \tquestions: \t[ \"Describe in detail your favorite childhood memory. Why is it your favorite? When and where did it happen? (Remember to use the past simple or continuous)\",\r\n\r\n\"Compare a country of your choice with China. What’s a place you’d like to visit in your chosen country and why? What is the country you chose famous for? What are some geographical features? (use some comparatives and superlatives when making comparisons)\",\r\n\r\n\"Brief Autobiography: When and where were you born? What are some of the most important events and memorable experiences in your life? Who is the most influential person who has made you who you are today?\",\r\n\r\n\"What do you predict the world will be like 100 years from now? Do you think it’ll be better or worse than it is today? What will be the biggest changes? (use some first conditional statements)\", \r\n\r\n\"What’s your favorite or least favorite TV show/movie? Give a review of it. What genre is it?  What is it about? Who’s your favorite character? What is your opinion of it?\",\r\n\r\n\"What are some of the social customs/norms in China? What are some things you should and shouldn’t do? Were some of the customs/norms different for your grandparents’ generation?\",\r\n\r\n\"What do you think is the most important invention that’s available to us today? Why? Who’s the inventor and what’s his/her career?\",  \r\n\r\n\"What is your personality type according to the Myers-Briggs test? Describe all 4 letters from your results. Do you agree with the results? Why or why not?\",\r\n\r\n\"If you won 5 million dollars in the lottery, what would you do with the money? Why? What would your budget for all of the money look like? (use the second conditional in part of your answer)\",\r\n\r\n\"Describe a story that interests you in detail. How does the story begin? Where does the story happen? Who are the most important characters? How does the story end? (Use some story telling adverbs to make your story more exciting! Also, make sure to that your story has a climax).\" \r\n \r\n],\r\n\t\t\troll: \t\t[]\r\n\t    };\r\n\t    \r\n\t   this.chooseQuestions = this.chooseQuestions.bind(this);\r\n\t   this.handleClick = this.handleClick.bind(this);\r\n\t}\t\r\n\r\n\thandleClick() {\r\n\t\tthis.chooseQuestions();\r\n\t}\r\n\r\n\t//Chooses 3 of the 9 die\r\n\tchooseQuestions() {\r\n\t\tlet questionArr=[];\r\n\t\tlet temp;\r\n\r\n\t\t//rolls for 3 random dice, no two the same\r\n\t\twhile (questionArr.length<5) {\r\n\t\t\ttemp=Math.floor((Math.random()*10));\r\n\t\t\tconsole.log(\"i rolled a \" + temp);\r\n\t\t\tif (!questionArr.includes(temp)) {\r\n\t\t\t\tquestionArr.push(temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconsole.log(\"finished rolling: \"+questionArr);\r\n\r\n\t\tthis.setState({\r\n\t\t\troll: questionArr\r\n\t\t})\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.chooseQuestions();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\r\n\t\t\t\t<button onClick={this.handleClick}>roll</button>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>{this.state.questions[this.state.roll[0]]}</p>\r\n\t\t\t\t\t<p>{this.state.questions[this.state.roll[1]]}</p>\r\n\t\t\t\t\t<p>{this.state.questions[this.state.roll[2]]}</p>\r\n\t\t\t\t\t<p>{this.state.questions[this.state.roll[3]]}</p>\r\n\t\t\t\t\t<p>{this.state.questions[this.state.roll[4]]}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport {Home} from './Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}